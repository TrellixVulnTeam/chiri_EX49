"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const cli_1 = require("@stencil/core/cli");
const stencil_runtime_1 = require("../stencil-runtime");
const project_graph_1 = require("@nrwl/workspace/src/core/project-graph");
const stencil_parameters_1 = require("../stencil-runtime/stencil-parameters");
const buildable_libs_utils_1 = require("@nrwl/workspace/src/utilities/buildable-libs-utils");
function createStencilCompilerOptions(taskCommand, options) {
    let runOptions = [taskCommand];
    if (options.port) {
        runOptions.push(`--port ${options.port}`);
    }
    runOptions = stencil_parameters_1.parseRunParameters(runOptions, options);
    return cli_1.parseFlags(runOptions);
}
function runExecutor(options, context) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const taskCommand = 'build';
        const projGraph = project_graph_1.createProjectGraph();
        const { target, dependencies } = buildable_libs_utils_1.calculateProjectDependencies(projGraph, context.root, context.projectName, context.targetName, context.configurationName);
        if (!buildable_libs_utils_1.checkDependentProjectsHaveBeenBuilt(context.root, context.projectName, context.targetName, dependencies)) {
            return { success: false };
        }
        const { config, pathCollection } = yield stencil_runtime_1.initializeStencilConfig(taskCommand, options, context, createStencilCompilerOptions);
        const stencilConfig = yield stencil_runtime_1.prepareConfigAndOutputargetPaths(config, pathCollection);
        buildable_libs_utils_1.updateBuildableProjectPackageJsonDependencies(context.root, context.projectName, context.targetName, context.configurationName, target, dependencies);
        return yield stencil_runtime_1.createStencilProcess(stencilConfig, pathCollection);
    });
}
exports.default = runExecutor;
//# sourceMappingURL=builder.js.map