"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addReactOutputtarget = exports.prepareReactLibrary = void 0;
const tslib_1 = require("tslib");
const versions_1 = require("../../../utils/versions");
const utillities_1 = require("../../../utils/utillities");
const fileutils_1 = require("../../../utils/fileutils");
const devkit_1 = require("@nrwl/devkit");
const react_1 = require("@nrwl/react");
const linter_1 = require("@nrwl/linter");
const stencil_core_utils_1 = require("../../../stencil-core-utils");
const ast_utils_1 = require("../../../utils/ast-utils");
function prepareReactLibrary(host, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { libsDir } = devkit_1.getWorkspaceLayout(host);
        const reactProjectName = `${options.projectName}-react`;
        const libraryTarget = yield react_1.libraryGenerator(host, {
            name: reactProjectName,
            style: 'css',
            publishable: options.publishable,
            component: false,
            skipTsConfig: false,
            skipFormat: true,
            unitTestRunner: 'jest',
            linter: linter_1.Linter.EsLint
        });
        yield devkit_1.addDependenciesToPackageJson(host, {}, {
            '@stencil/react-output-target': versions_1.STENCIL_OUTPUTTARGET_VERSION['react']
        });
        host.write(`${libsDir}/${reactProjectName}/src/index.ts`, `export * from './generated/components';`);
        utillities_1.addToGitignore(host, `${libsDir}/${reactProjectName}/**/generated`);
        return libraryTarget;
    });
}
exports.prepareReactLibrary = prepareReactLibrary;
function addReactOutputtarget(tree, projectName, stencilProjectConfig, stencilConfigPath, stencilConfigSource, packageName) {
    const reactProjectConfig = devkit_1.readProjectConfiguration(tree, `${projectName}-react`);
    const realtivePath = fileutils_1.getRelativePath(fileutils_1.getDistDir(stencilProjectConfig.root), reactProjectConfig.root);
    const changes = devkit_1.applyChangesToString(stencilConfigSource.text, [
        ...ast_utils_1.addImport(stencilConfigSource, `import { reactOutputTarget } from '@stencil/react-output-target';`),
        ...stencil_core_utils_1.addToOutputTargets(stencilConfigSource, `
      reactOutputTarget({
        componentCorePackage: '${packageName}',
        proxiesFile: '${realtivePath}/src/generated/components.ts',
        includeDefineCustomElements: true,
      })
      `)
    ]);
    tree.write(stencilConfigPath, changes);
}
exports.addReactOutputtarget = addReactOutputtarget;
//# sourceMappingURL=react.js.map