"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addVueOutputtarget = exports.prepareVueLibrary = void 0;
const tslib_1 = require("tslib");
const versions_1 = require("../../../utils/versions");
const utillities_1 = require("../../../utils/utillities");
const fileutils_1 = require("../../../utils/fileutils");
const stencil_core_utils_1 = require("../../../stencil-core-utils");
const devkit_1 = require("@nrwl/devkit");
const vue_1 = require("@nx-plus/vue");
const ast_utils_1 = require("../../../utils/ast-utils");
const ast_utils_2 = require("@nrwl/workspace/src/utilities/ast-utils");
function prepareVueLibrary(host, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const vueProjectName = `${options.projectName}-vue`;
        const { libsDir } = devkit_1.getWorkspaceLayout(host);
        const libraryTarget = yield vue_1.libraryGenerator(host, {
            name: vueProjectName
        });
        devkit_1.addDependenciesToPackageJson(host, {}, {
            '@stencil/vue-output-target': versions_1.STENCIL_OUTPUTTARGET_VERSION['vue']
        });
        host.delete(`${libsDir}/${vueProjectName}/tests/unit/example.spec.ts`);
        host.delete(`${libsDir}/${vueProjectName}/src/lib/HelloWorld.vue`);
        host.delete(`${libsDir}/${vueProjectName}/src/index.ts`);
        host.delete(`${libsDir}/${vueProjectName}/src/shims-tsx.d.ts`);
        host.delete(`${libsDir}/${vueProjectName}/src/shims-vue.d.ts`);
        utillities_1.addToGitignore(host, `${libsDir}/${vueProjectName}/**/generated`);
        return libraryTarget;
    });
}
exports.prepareVueLibrary = prepareVueLibrary;
function addVueOutputtarget(host, projectName, stencilProjectConfig, stencilConfigPath, stencilConfigSource, packageName) {
    const reactProjectConfig = devkit_1.readProjectConfiguration(host, `${projectName}-vue`);
    const realtivePath = fileutils_1.getRelativePath(fileutils_1.getDistDir(stencilProjectConfig.root), reactProjectConfig.root);
    const proxyPath = devkit_1.joinPathFragments(realtivePath, 'src/generated/components.ts');
    const changes = devkit_1.applyChangesToString(stencilConfigSource.text, [
        ...ast_utils_1.addImport(stencilConfigSource, `import { vueOutputTarget, ComponentModelConfig } from '@stencil/vue-output-target';`),
        ...stencil_core_utils_1.addToOutputTargets(stencilConfigSource, `
      vueOutputTarget({
        componentCorePackage: '${packageName}',
        proxiesFile: '${proxyPath}',
        componentModels: vueComponentModels,
      })
      `)
    ]);
    host.write(stencilConfigPath, changes);
    ast_utils_2.addGlobal(host, stencilConfigSource, stencilConfigPath, 'const vueComponentModels: ComponentModelConfig[] = [];');
}
exports.addVueOutputtarget = addVueOutputtarget;
//# sourceMappingURL=vue.js.map