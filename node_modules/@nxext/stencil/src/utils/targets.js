"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getServeTarget = exports.getE2eTarget = exports.getTestTarget = exports.getBuildTarget = exports.getDefaultTargets = void 0;
const workspace_1 = require("@nrwl/workspace");
function getDefaultTargets(projectType, options) {
    return {
        build: getBuildTarget(projectType, options),
        serve: getServeTarget(projectType, options),
        test: getTestTarget(projectType, options),
        e2e: getE2eTarget(projectType, options)
    };
}
exports.getDefaultTargets = getDefaultTargets;
function getBuildTarget(projectType, options) {
    const tsconfigAddition = projectType === workspace_1.ProjectType.Application ? 'app' : 'lib';
    return {
        executor: '@nxext/stencil:build',
        outputs: ['{options.outputPath}'],
        options: {
            projectType,
            tsConfig: `${options.projectRoot}/tsconfig.${tsconfigAddition}.json`,
            configPath: `${options.projectRoot}/stencil.config.ts`,
            outputPath: `dist/${options.projectRoot}`
        },
        configurations: {
            production: {
                dev: false
            }
        }
    };
}
exports.getBuildTarget = getBuildTarget;
function getTestTarget(projectType, options) {
    const tsconfigAddition = projectType === workspace_1.ProjectType.Application ? 'app' : 'lib';
    return {
        executor: '@nxext/stencil:test',
        outputs: ['{options.outputPath}'],
        options: {
            projectType,
            tsConfig: `${options.projectRoot}/tsconfig.${tsconfigAddition}.json`,
            configPath: `${options.projectRoot}/stencil.config.ts`,
            outputPath: `dist/${options.projectRoot}`
        }
    };
}
exports.getTestTarget = getTestTarget;
function getE2eTarget(projectType, options) {
    const tsconfigAddition = projectType === workspace_1.ProjectType.Application ? 'app' : 'lib';
    return {
        executor: '@nxext/stencil:e2e',
        outputs: ['{options.outputPath}'],
        options: {
            projectType,
            tsConfig: `${options.projectRoot}/tsconfig.${tsconfigAddition}.json`,
            configPath: `${options.projectRoot}/stencil.config.ts`,
            outputPath: `dist/${options.projectRoot}`
        }
    };
}
exports.getE2eTarget = getE2eTarget;
function getServeTarget(projectType, options) {
    const tsconfigAddition = projectType === workspace_1.ProjectType.Application ? 'app' : 'lib';
    return {
        executor: `@nxext/stencil:build`,
        outputs: ['{options.outputPath}'],
        options: {
            projectType,
            tsConfig: `${options.projectRoot}/tsconfig.${tsconfigAddition}.json`,
            configPath: `${options.projectRoot}/stencil.config.ts`,
            outputPath: `dist/${options.projectRoot}`,
            serve: true,
            watch: true
        }
    };
}
exports.getServeTarget = getServeTarget;
//# sourceMappingURL=targets.js.map