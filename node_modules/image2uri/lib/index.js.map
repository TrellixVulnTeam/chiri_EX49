{"version":3,"sources":["../src/index.ts"],"names":["extTypeMap","file","image","fs","readFileSync","ext","path","extname","contentType","toString"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEO,IAAMA,UAAU,GAAG;AACxB,UAAQ,WADgB;AAExB,UAAQ,WAFgB;AAGxB,UAAQ,YAHgB;AAIxB,WAAS,YAJe;AAKxB,SAAO,WALiB;AAMxB,UAAQ,WANgB;AAOxB,WAAS,YAPe;AAQxB,UAAQ,cARgB;AASxB,UAAQ;AATgB,CAAnB;;;eAsBQ,kBAACC,IAAD,EAAkB;AAC/B,MAAMC,KAAK,GAAGC,eAAGC,YAAH,CAAgBH,IAAhB,CAAd;;AACA,MAAMI,GAAG,GAAGC,iBAAKC,OAAL,CAAaN,IAAb,CAAZ;;AACA,MAAMO,WAAW,GAAGR,UAAU,CAACK,GAAD,CAAV,IAAmB,YAAvC;AACA,wBAAeG,WAAf,qBAAqCN,KAAK,CAACO,QAAN,CAAe,QAAf,CAArC;AACD,C","sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nexport const extTypeMap = {\n  '.png': 'image/png',\n  '.gif': 'image/gif',\n  '.jpg': 'image/jpeg',\n  '.jpeg': 'image/jpeg',\n  '.bm': 'image/bmp',\n  '.bmp': 'image/bmp',\n  '.webp': 'image/webp',\n  '.ico': 'image/x-icon',\n  '.svg': 'image/svg+xml'\n}\n\nexport type ExtType = '.png'\n  | '.gif'\n  | '.jpg'\n  | '.jpeg'\n  | '.bm'\n  | '.bmp'\n  | '.webp'\n  | '.ico'\n  | '.svg';\n\nexport default (file: string) => {\n  const image = fs.readFileSync(file)\n  const ext = path.extname(file) as ExtType;\n  const contentType = extTypeMap[ext] || 'image/jpeg'\n  return `data:${contentType};base64,${image.toString('base64')}`\n}"]}